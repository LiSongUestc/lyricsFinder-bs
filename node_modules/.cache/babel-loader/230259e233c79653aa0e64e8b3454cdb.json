{"ast":null,"code":"var _jsxFileName = \"F:\\\\code\\\\vue\\\\react-hook\\\\lyricfinder-ant\\\\src\\\\components\\\\tracks\\\\Tracks.js\";\nimport React, { useContext } from \"react\";\nimport { Context } from \"../../context\";\nimport Track from \"../tracks/Track\";\nimport { Row, Spinner } from \"react-bootstrap\";\nexport default function Tracks() {\n  const [state] = useContext(Context);\n  const {\n    track_list,\n    heading\n  } = state;\n\n  if (track_list === undefined || track_list.length === 0) {\n    return React.createElement(Spinner, {\n      animation: \"border\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    });\n  } else return React.createElement(React.Fragment, null, React.createElement(\"h3\", {\n    className: \"text-center mb-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, heading), React.createElement(Row, {\n    lg: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, track_list.map(item => React.createElement(Track, {\n    key: item.track.track_id,\n    track: item.track,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }))));\n}","map":{"version":3,"sources":["F:/code/vue/react-hook/lyricfinder-ant/src/components/tracks/Tracks.js"],"names":["React","useContext","Context","Track","Row","Spinner","Tracks","state","track_list","heading","undefined","length","map","item","track","track_id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,OAAT,QAAwB,eAAxB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,SAASC,GAAT,EAAcC,OAAd,QAA6B,iBAA7B;AAEA,eAAe,SAASC,MAAT,GAAkB;AAC/B,QAAM,CAACC,KAAD,IAAUN,UAAU,CAACC,OAAD,CAA1B;AACA,QAAM;AAAEM,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAA0BF,KAAhC;;AACA,MAAIC,UAAU,KAAKE,SAAf,IAA4BF,UAAU,CAACG,MAAX,KAAsB,CAAtD,EAAyD;AACvD,WAAO,oBAAC,OAAD;AAAS,MAAA,SAAS,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFD,MAGE,OACE,0CACE;AAAI,IAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCF,OAAlC,CADF,EAEE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,UAAU,CAACI,GAAX,CAAeC,IAAI,IAClB,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAEA,IAAI,CAACC,KAAL,CAAWC,QAAvB;AAAiC,IAAA,KAAK,EAAEF,IAAI,CAACC,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CAFF,CADF;AAUH","sourcesContent":["import React, { useContext } from \"react\";\r\nimport { Context } from \"../../context\";\r\nimport Track from \"../tracks/Track\";\r\nimport { Row, Spinner } from \"react-bootstrap\";\r\n\r\nexport default function Tracks() {\r\n  const [state] = useContext(Context);\r\n  const { track_list, heading } = state;\r\n  if (track_list === undefined || track_list.length === 0) {\r\n    return <Spinner animation=\"border\" />;\r\n  } else\r\n    return (\r\n      <>\r\n        <h3 className=\"text-center mb-4\">{heading}</h3>\r\n        <Row lg={6}>\r\n          {track_list.map(item => (\r\n            <Track key={item.track.track_id} track={item.track} />\r\n          ))}\r\n        </Row>\r\n      </>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}